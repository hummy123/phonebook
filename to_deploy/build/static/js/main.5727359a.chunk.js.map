{"version":3,"sources":["components/TextInput.js","services/persons.js","components/Form.js","components/Person.js","components/Display.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["TextInput","props","object","label","value","onChange","event","setValue","target","baseLink","defaultExports","getAll","a","axios","get","data","console","log","updatePerson","updatedPerson","put","id","savePerson","personObject","post","deletePerson","delete","Form","persons","setPersons","notify","useState","newName","setNewName","nameObjects","newNumber","setNewNumber","numberObjects","addPerson","preventDefault","person","checkExists","name","number","personService","concat","response","error","window","confirm","newPerson","map","filter","undefined","find","onSubmit","type","Person","newPersons","curPerson","onClick","Display","Filter","setFilterPeople","textFilter","setTextFilter","useEffect","lowName","toLowerCase","lowFilter","includes","textObjects","Notification","message","className","App","notifMessage","setNotifMessage","setTimeout","fetchData","filteredPeople","filterObject","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5727359a.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TextInput = (props) => {\n\tconst enterValue = (event) =>\n\t\tprops.object.setValue(event.target.value)\n\n\treturn (<div>\n\t\t<label>{props.object.label}</label>\n\t\t<input value={props.object.value} onChange={enterValue} />\n\t</div>)\n}\n\nTextInput.propTypes = {\n\tobject: PropTypes.object.isRequired\n}\n\nexport default TextInput\n","import axios from 'axios'\nconst baseLink = '/api/persons'\n\nconst getAll = async () => {\n\ttry {\n\t\treturn (await axios.get(baseLink)).data\n\t} catch (err) {\n\t\tconsole.log(err)\n\t\tthrow err\n\t}\n}\n\nconst updatePerson = async (updatedPerson) => {\n\ttry {\n\t\treturn (await axios.put(\n\t\t\t`${baseLink}/${updatedPerson.id}`,\n\t\t\tupdatedPerson)).data\n\t} catch (err) {\n\t\tconsole.log(err)\n\t\tthrow err\n\t}\n}\n\nconst savePerson = async (personObject) => {\n\ttry {\n\t\treturn (await axios.post(baseLink, personObject)).data\n\t} catch (err) {\n\t\tconsole.log(err)\n\t\tthrow err\n\t}\n}\n\nconst deletePerson = async (id) => {\n\ttry {\n\t\treturn (await axios.delete(`${baseLink}/${id}`)).data\n\t} catch (err) {\n\t\tconsole.log(err)\n\t\tthrow err\n\t}\n}\n\nconst defaultExports = {getAll, updatePerson, savePerson, deletePerson}\n\nexport default defaultExports\n","import React, {useState} from 'react'\nimport TextInput from './TextInput'\nimport personService from '../services/persons'\nimport PropTypes from 'prop-types'\n\nconst Form = (props) => {\n\t//destructure props\n\tconst persons = props.object.persons\n\tconst setPersons = props.object.setPersons\n\tconst notify = props.object.notify\n\n\t//declare values used for name input\n\tconst [ newName, setNewName ] = useState('')\n\tconst nameObjects = {\n\t\tlabel: 'name',\n\t\tvalue: newName,\n\t\tsetValue: setNewName\n\t}\n\n\t//declare values used for number input\n\tconst [ newNumber, setNewNumber ] = useState('')\n\tconst numberObjects = {\n\t\tlabel: 'number',\n\t\tvalue: newNumber,\n\t\tsetValue: setNewNumber\n\t}\n\n\t//add person\n\tconst addPerson = async (event) => {\n\t\tevent.preventDefault()\n\t\tconst person = checkExists()\n\n\t\tif (!person) {\n\t\t\tconst personObject = {\n\t\t\t\tname: newName,\n\t\t\t\tnumber: newNumber\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait personService.savePerson(personObject)\n\t\t\t\tsetPersons(persons.concat(personObject))\n\t\t\t\tawait notify(`${personObject.name}'s contact details have been added!`)\n\t\t\t\tsetNewName('')\n\t\t\t\tsetNewNumber('')\n\t\t\t} catch (err) {\n\t\t\t\tawait notify(err.response.data.error)\n\t\t\t}\n\t\t} else {\n\t\t\tawait updatePerson(person)\n\t\t}\n\t}\n\n\t//update person\n\tconst updatePerson = async (person) => {\n\t\tif (window.confirm(`Do you want to update ${newName}'s number?`)) {\n\t\t\tconst newPerson = {...person, 'number': newNumber}\n\t\t\ttry {\n\t\t\t\tawait personService.updatePerson(newPerson)\n\t\t\t\tawait notify(`${newPerson.name}'s contact details have been updated!`)\n\t\t\t\tsetPersons(persons.map(person => person.id !== newPerson.id ? person : newPerson))\n\t\t\t} catch (err) {\n\t\t\t\tconst message = err.response.data.error\n\t\t\t\tif (message === 'malformed id') {\n\t\t\t\t\tawait notify('The contact you are trying to update has been deleted!')\n\t\t\t\t\tsetPersons(persons.filter(person => person.id !== newPerson.id ? person : undefined))\n\t\t\t\t} else await notify(err.response.data.error)\n\t\t\t}\n\t\t}\n\t}\n\n\t/* check if person already exists (called while adding new)\n     * and return person object if exist */\n\tconst checkExists = () => {\n\t\treturn persons.find(person => person.name === newName)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h2>Add a person</h2>\n\t\t\t<form onSubmit={addPerson}>\n\t\t\t\t<TextInput object={nameObjects} />\n\t\t\t\t<TextInput object={numberObjects} />\n\t\t\t\t<button type=\"submit\">add</button>\n\t\t\t</form>\n\t\t</>\n\t)\n}\n\nForm.propTypes = {\n\tobject: PropTypes.object.isRequired\n}\n\nexport default Form\n","import React from 'react'\nimport personService from '../services/persons'\nimport PropTypes from 'prop-types'\n\nconst Person = ({person, object: {persons, setPersons, notify}}) => {\n\n\tconst deletePerson = async (id) => {\n\t\tif (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n\t\t\tawait personService.deletePerson(id)\n\t\t\tconst newPersons = [...persons].filter(curPerson => {\n\t\t\t\treturn (curPerson.id !== id ? curPerson : undefined)\n\t\t\t})\n\t\t\tsetPersons(newPersons)\n\t\t\tnotify(`You have deleted ${person.name}'s contact.`)\n\t\t}\n\t}\n\n\treturn (<li>\n        Name: {person.name} Number: {person.number}\n\t\t<button onClick={\n\t\t\t() => deletePerson(person.id)}>\n            Delete\n\t\t</button>\n\t</li>)\n}\n\nPerson.propTypes = {\n\tperson: PropTypes.object.isRequired,\n\tobject: PropTypes.object.isRequired\n}\n\nexport default Person\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Person from './Person'\n\nconst Display = (props) => {\n\n\treturn (\n\t\t<>\n\t\t\t<h2>People</h2>\n\t\t\t<ul>\n\t\t\t\t{props.persons.map(person =>\n\t\t\t\t\t<Person key={person.name} person={person} object={props.object}  />\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nDisplay.propTypes = {\n\tpersons: PropTypes.array.isRequired,\n\tobject: PropTypes.object.isRequired\n}\n\nexport default Display\n","import React, {useEffect, useState} from 'react'\nimport TextInput from './TextInput'\nimport PropTypes from 'prop-types'\n\nconst Filter = ({object: {setFilterPeople, persons}}) => {\n\t//declare values used for filter input\n\tconst [ textFilter, setTextFilter ] = useState('')\n\n\t//when person object changes (because of form)\n\t//or when text filter changes, update filter\n\n\tuseEffect(() => {\n\t\tsetFilterPeople(persons.filter(person => {\n\t\t\t//store lower case values, so comparison is case-insensitive\n\t\t\tconst lowName = person.name.toLowerCase()\n\t\t\tconst lowFilter = textFilter.toLowerCase()\n\n\t\t\t//return person if name contains filter string\n\t\t\tif (lowName.includes(lowFilter))\n\t\t\t\treturn person\n\t\t\telse return undefined\n\t\t}))\n\t}, [textFilter, setFilterPeople, persons])\n\n\t//objects for text input element\n\tconst textObjects = {\n\t\tlabel: 'name',\n\t\tvalue: textFilter,\n\t\tsetValue: setTextFilter\n\t}\n\n\treturn(\n\t\t<>\n\t\t\t<h2>Filter list</h2>\n\t\t\t<TextInput object={textObjects}/>\n\t\t</>\n\t)\n}\n\nFilter.propTypes = {\n\tobject: PropTypes.object.isRequired\n}\n\nexport default Filter\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Notification = ({ message }) => {\n\tif (message === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nNotification.propTypes = {\n\tmessage: PropTypes.string.isRequired\n}\n\nexport default Notification\n","import React, {useEffect, useState} from 'react'\nimport Form from './components/Form'\nimport Display from './components/Display'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([])\n\n\tconst [notifMessage, setNotifMessage ] = useState(null)\n\tconst notify = async (message) => {\n\t\tsetNotifMessage(message)\n\t\tsetTimeout(() => {\n\t\t\tsetNotifMessage(null)\n\t\t}, 5000)\n\t}\n\n\tuseEffect( () => {\n\t\tconst fetchData = async () => {\n\t\t\tsetPersons(await personService.getAll())\n\t\t}\n\t\tfetchData()\n\t},[setPersons])\n\n\tconst personObject = {\n\t\tpersons: persons,\n\t\tsetPersons: setPersons,\n\t\tnotify: notify\n\t}\n\n\tconst [filteredPeople, setFilterPeople] = useState(persons)\n\tconst filterObject = {\n\t\tpersons: persons,\n\t\tsetFilterPeople: setFilterPeople\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Phonebook</h1>\n\t\t\t<Notification message={notifMessage} />\n\t\t\t<Filter object={filterObject} />\n\t\t\t<Display persons={filteredPeople} object={personObject} />\n\t\t\t<Form object={personObject} />\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}